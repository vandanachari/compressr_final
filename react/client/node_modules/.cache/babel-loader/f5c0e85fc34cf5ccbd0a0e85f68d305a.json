{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Compressr\"), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var text = ReactDOM.findDOMNode(this.refs.input).value;\n      fetch('http://localhost:8080/api/analysis?text=' + text).then(res => res.json()).then(data => this.setState({\n        sentences: data\n      }, () => {\n        var tempArray = [];\n\n        for (const sentence of data.sentences) {\n          tempArray.push(sentence.sentence);\n        }\n\n        this.setState({\n          sentences: tempArray\n        });\n        tempArray = [];\n\n        for (const rank of data.sentences) {\n          tempArray.push(rank.rank);\n        }\n\n        this.setState({\n          ranks: tempArray\n        });\n        tempArray = [];\n\n        for (const word of data.entities) {\n          tempArray.push(word.word);\n        }\n\n        this.setState({\n          words: tempArray\n        });\n        tempArray = [];\n\n        for (const link of data.entities) {\n          tempArray.push(link.link);\n        }\n\n        this.setState({\n          metadata: tempArray\n        });\n        tempArray = [];\n      }));\n    };\n\n    this.buttonHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.state = {\n      sentences: [],\n      ranks: [],\n      words: [],\n      metadata: [],\n      value: \"\"\n    }; //this.output = ''\n    //this.render()\n  } // callAPI() {\n  //   fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n  //   .then(res => res.text())\n  //   .then(data => this.setState({sentences: data}))\n  // }\n  // componentWillMount() {\n  //   this.callAPI()\n  // }\n\n\n  render() {\n    var tempArray = [];\n    console.log(this.state.sentences);\n\n    for (const element in this.state.sentences) {\n      console.log('HERE IS A SENTENCE ' + this.state.sentences[element]);\n      tempArray.push(this.state.sentences[element]); //<p id={element}>{this.state.sentences[element]}</p>\n    } // const answer = tempArray.map((line, id) => (\n    //   <p id={id}>{line}</p>\n    // ))\n\n\n    for (const element in tempArray) {\n      console.log(element);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.buttonHandler,\n      ref: \"compress\",\n      type: \"radio\",\n      id: \"compress\",\n      name: \"type\",\n      value: \"compress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"compress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Compress\"), /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.buttonHandler,\n      ref: \"outline\",\n      type: \"radio\",\n      id: \"outline\",\n      name: \"type\",\n      value: \"outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Outline\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"input\",\n      id: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, tempArray.map((line, id) => /*#__PURE__*/React.createElement(\"p\", {\n      id: id,\n      name: line.rank,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, line.sentence))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js"],"names":["React","ReactDOM","App","QueryForm","Component","constructor","props","SubmitHandler","event","preventDefault","text","findDOMNode","refs","input","value","fetch","then","res","json","data","setState","sentences","tempArray","sentence","push","rank","ranks","word","entities","words","link","metadata","buttonHandler","e","target","console","log","state","render","element","map","line","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,aAvBmB,GAuBFC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAGT,QAAQ,CAACU,WAAT,CAAqB,KAAKC,IAAL,CAAUC,KAA/B,EAAsCC,KAAjD;AAEAC,MAAAA,KAAK,CAAC,6CAA2CL,IAA5C,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF;AAAZ,OAAd,EAAiC,MAAM;AACnD,YAAIG,SAAS,GAAG,EAAhB;;AACA,aAAK,MAAMC,QAAX,IAAuBJ,IAAI,CAACE,SAA5B,EAAuC;AACrCC,UAAAA,SAAS,CAACE,IAAV,CAAeD,QAAQ,CAACA,QAAxB;AACD;;AACD,aAAKH,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAEC;AAAZ,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;;AAEA,aAAK,MAAMG,IAAX,IAAmBN,IAAI,CAACE,SAAxB,EAAmC;AACjCC,UAAAA,SAAS,CAACE,IAAV,CAAeC,IAAI,CAACA,IAApB;AACD;;AACD,aAAKL,QAAL,CAAc;AAACM,UAAAA,KAAK,EAAEJ;AAAR,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;;AAEA,aAAK,MAAMK,IAAX,IAAmBR,IAAI,CAACS,QAAxB,EAAkC;AAChCN,UAAAA,SAAS,CAACE,IAAV,CAAeG,IAAI,CAACA,IAApB;AACD;;AACD,aAAKP,QAAL,CAAc;AAACS,UAAAA,KAAK,EAAEP;AAAR,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;;AAEA,aAAK,MAAMQ,IAAX,IAAmBX,IAAI,CAACS,QAAxB,EAAkC;AAChCN,UAAAA,SAAS,CAACE,IAAV,CAAeM,IAAI,CAACA,IAApB;AACD;;AACD,aAAKV,QAAL,CAAc;AAACW,UAAAA,QAAQ,EAAET;AAAX,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;AACD,OAzBa,CAFd;AA4BD,KAvDkB;;AAAA,SAyDnBU,aAzDmB,GAyDFC,CAAD,IAAO;AACrB,WAAKb,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEmB,CAAC,CAACC,MAAF,CAASpB;AAAjB,OAAd;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,MAAF,CAASpB,KAArB;AACD,KA5DkB;;AAEjB,SAAKuB,KAAL,GAAa;AACXhB,MAAAA,SAAS,EAAE,EADA;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXG,MAAAA,KAAK,EAAE,EAHI;AAIXE,MAAAA,QAAQ,EAAE,EAJC;AAKXjB,MAAAA,KAAK,EAAE;AALI,KAAb,CAFiB,CASjB;AACA;AACD,GAZqC,CActC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAyCAwB,EAAAA,MAAM,GAAG;AACP,QAAIhB,SAAS,GAAG,EAAhB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWhB,SAAvB;;AACA,SAAK,MAAMkB,OAAX,IAAsB,KAAKF,KAAL,CAAWhB,SAAjC,EAA4C;AAC1Cc,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKC,KAAL,CAAWhB,SAAX,CAAqBkB,OAArB,CAApC;AACAjB,MAAAA,SAAS,CAACE,IAAV,CAAe,KAAKa,KAAL,CAAWhB,SAAX,CAAqBkB,OAArB,CAAf,EAF0C,CAG1C;AACD,KAPM,CASP;AACA;AACA;;;AACA,SAAK,MAAMA,OAAX,IAAsBjB,SAAtB,EAAiC;AAC/Ba,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKhC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAE,KAAKyB,aAArB;AAAoC,MAAA,GAAG,EAAC,UAAxC;AAAmD,MAAA,IAAI,EAAC,OAAxD;AAAgE,MAAA,EAAE,EAAC,UAAnE;AAA8E,MAAA,IAAI,EAAC,MAAnF;AAA0F,MAAA,KAAK,EAAC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,MAAA,OAAO,EAAE,KAAKA,aAArB;AAAoC,MAAA,GAAG,EAAC,SAAxC;AAAkD,MAAA,IAAI,EAAC,OAAvD;AAA+D,MAAA,EAAE,EAAC,SAAlE;AAA4E,MAAA,IAAI,EAAC,MAAjF;AAAwF,MAAA,KAAK,EAAC,SAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAIsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtC,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eAQE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAU,MAAA,GAAG,EAAC,OAAd;AAAsB,MAAA,EAAE,EAAC,OAAzB;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBV,SAAS,CAACkB,GAAV,CAAc,CAACC,IAAD,EAAOC,EAAP,kBACZ;AAAG,MAAA,EAAE,EAAEA,EAAP;AAAW,MAAA,IAAI,EAAED,IAAI,CAAChB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BgB,IAAI,CAAClB,QAAlC,CADF,CAAlB,CAHJ,CARF,CADJ,CADF;AAoBD;;AAnGqC;;AAwGxC,eAAerB,GAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Compressr</header>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sentences: [],\n      ranks: [],\n      words: [],\n      metadata: [],\n      value: \"\",\n  };\n    //this.output = ''\n    //this.render()\n  }\n\n  // callAPI() {\n  //   fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n  //   .then(res => res.text())\n  //   .then(data => this.setState({sentences: data}))\n  // }\n  \n  // componentWillMount() {\n  //   this.callAPI()\n  // }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var text = ReactDOM.findDOMNode(this.refs.input).value;\n    \n    fetch('http://localhost:8080/api/analysis?text='+text)\n    .then(res => res.json())\n    .then(data => this.setState({sentences: data}, () => {\n      var tempArray = []\n      for (const sentence of data.sentences) {\n        tempArray.push(sentence.sentence)\n      }\n      this.setState({sentences: tempArray})\n      tempArray = []\n\n      for (const rank of data.sentences) {\n        tempArray.push(rank.rank)\n      }\n      this.setState({ranks: tempArray})\n      tempArray = []\n\n      for (const word of data.entities) {\n        tempArray.push(word.word)\n      }\n      this.setState({words: tempArray})\n      tempArray = []\n\n      for (const link of data.entities) {\n        tempArray.push(link.link)\n      }\n      this.setState({metadata: tempArray})\n      tempArray = []\n    }))\n  }\n\n  buttonHandler = (e) => {\n    this.setState({value: e.target.value})\n    console.log(e.target.value)\n  }\n\n  render() {\n    var tempArray = []\n    console.log(this.state.sentences)\n    for (const element in this.state.sentences) {\n      console.log('HERE IS A SENTENCE ' + this.state.sentences[element])\n      tempArray.push(this.state.sentences[element])\n      //<p id={element}>{this.state.sentences[element]}</p>\n    }\n\n    // const answer = tempArray.map((line, id) => (\n    //   <p id={id}>{line}</p>\n    // ))\n    for (const element in tempArray) {\n      console.log(element)\n    }\n\n    return (\n      <div className=\"App\">\n          <div id=\"inputForm\">\n            <form onSubmit={this.SubmitHandler}>\n              <input onClick={this.buttonHandler} ref=\"compress\" type=\"radio\" id=\"compress\" name=\"type\" value=\"compress\"></input>\n              <label for=\"compress\">Compress</label>\n              <input onClick={this.buttonHandler} ref=\"outline\" type=\"radio\" id=\"outline\" name=\"type\" value=\"outline\"></input>\n              <label for=\"outline\">Outline</label><br></br>\n              <input type='submit'/>\n            </form>\n            <div id=\"wrapper\">\n                <p>Enter Text Below:</p>\n                <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n                <div id=\"answer\">{tempArray.map((line, id) => (\n                                    <p id={id} name={line.rank}>{line.sentence}</p>\n                ))}</div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}