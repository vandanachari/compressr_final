{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Compressr\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"inputForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.SubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: this.buttonHandler,\n    ref: \"compress\",\n    type: \"radio\",\n    id: \"compress\",\n    name: \"type\",\n    value: \"compress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"compress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Compress\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: this.buttonHandler,\n    ref: \"outline\",\n    type: \"radio\",\n    id: \"outline\",\n    name: \"type\",\n    value: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"Outline\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var text = ReactDOM.findDOMNode(this.refs.input).value;\n      fetch('http://localhost:8080/api/analysis?text=' + text).then(res => res.json()).then(sentences => this.setState({\n        sentences: sentences\n      }, () => {\n        console.log('fetched these sentences', sentences); // for (var sentence of this.state.sentences) {\n        //   this.output += sentence\n        // }\n        // console.log(this.output)\n      }));\n    };\n\n    this.buttonHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      sentences: \"\",\n      value: \"\"\n    }; //this.output = ''\n    //this.render()\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:8080/api/analysis?text=Hello World!\").then(res => res.text()).then(sentences => this.setState({\n      sentences: sentences\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    if (this.value === 'compress') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"input\",\n        id: \"input\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"output\",\n        id: \"output\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Compress\"));\n    }\n\n    if (this.value === 'outline') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"input\",\n        id: \"input\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"output\",\n        id: \"output\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, \"Outline\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"input\",\n      id: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"output\",\n      id: \"output\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js"],"names":["React","ReactDOM","App","SubmitHandler","buttonHandler","QueryForm","Component","constructor","props","event","preventDefault","text","findDOMNode","refs","input","value","fetch","then","res","json","sentences","setState","console","log","e","target","state","callAPI","componentWillMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Compressr</header>\n      <div className=\"App\">\n            <div id=\"inputForm\">\n              <form onSubmit={this.SubmitHandler}>\n                <input onChange={this.buttonHandler} ref=\"compress\" type=\"radio\" id=\"compress\" name=\"type\" value=\"compress\"></input>\n                <label for=\"compress\">Compress</label>\n                <input onChange={this.buttonHandler} ref=\"outline\" type=\"radio\" id=\"outline\" name=\"type\" value=\"outline\"></input>\n                <label for=\"outline\">Outline</label><br></br>\n                <input type='submit'/>\n              </form>\n            </div>\n        </div>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sentences: \"\",\n      value: \"\"\n  };\n    //this.output = ''\n    //this.render()\n  }\n\n  callAPI() {\n    fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n    .then(res => res.text())\n    .then(sentences => this.setState({sentences: sentences}))\n  }\n  \n  componentWillMount() {\n    this.callAPI()\n  }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var text = ReactDOM.findDOMNode(this.refs.input).value;\n    \n    fetch('http://localhost:8080/api/analysis?text='+text)\n    .then(res => res.json())\n    .then(sentences => this.setState({sentences: sentences}, () => {\n      console.log('fetched these sentences', sentences)\n      // for (var sentence of this.state.sentences) {\n      //   this.output += sentence\n      // }\n      // console.log(this.output)\n    }))\n  }\n\n  buttonHandler = (e) => {\n    this.setState({value: e.target.value})\n  }\n\n  render() {\n    if (this.value === 'compress') {\n      return (\n        <div id=\"wrapper\">\n          <p>Enter Text Below:</p>\n          <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n          <textarea ref=\"output\" id=\"output\" type=\"text\">\n            Compress\n          </textarea>\n        </div>\n      )\n    } \n    if (this.value === 'outline') {\n      return (\n        <div id=\"wrapper\">\n        <p>Enter Text Below:</p>\n        <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n        <textarea ref=\"output\" id=\"output\" type=\"text\">\n          Outline\n        </textarea>\n      </div>\n      )\n    }\n    return (\n      <div id=\"wrapper\">\n      <p>Enter Text Below:</p>\n      <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n      <textarea ref=\"output\" id=\"output\" type=\"text\">\n      </textarea>\n    </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}