{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Compressr\"), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var text = ReactDOM.findDOMNode(this.refs.input).value;\n      fetch('http://localhost:8080/api/analysis?text=' + text).then(res => res.json()).then(data => this.setState(() => {\n        console.log('&&&&&&&&&&&&&&&&&&&&&&&&&FETCHED DATA HERE IS THE  FECTED DATA' + data);\n        console.log(this.state.sentences);\n        var tempArray = [];\n        var inc = 0;\n\n        for (const sentence of data.sentences) {\n          tempArray.push(sentence.sentence);\n          inc++;\n        }\n\n        this.setState({\n          numOfSentences: inc\n        });\n        this.setState({\n          sentences: tempArray\n        });\n        tempArray = [];\n\n        for (const rank of data.sentences) {\n          tempArray.push(rank.rank);\n        }\n\n        this.setState({\n          ranks: tempArray\n        });\n        tempArray = [];\n\n        for (const word of data.entities) {\n          tempArray.push(word.word);\n        }\n\n        this.setState({\n          words: tempArray\n        });\n        tempArray = [];\n\n        for (const link of data.entities) {\n          tempArray.push(link.link);\n        }\n\n        this.setState({\n          metadata: tempArray\n        });\n        tempArray = [];\n      }));\n    };\n\n    this.buttonHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.state = {\n      sentences: [],\n      ranks: [],\n      words: [],\n      metadata: [],\n      numOfSentences: 0\n    }; //this.output = ''\n    //this.render()\n  } // callAPI() {\n  //   fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n  //   .then(res => res.text())\n  //   .then(data => this.setState({sentences: data}))\n  // }\n  // componentWillMount() {\n  //   this.callAPI()\n  // }\n\n\n  render() {\n    var specialSentences = [];\n    var excessSentences = [];\n    var answerArray = [];\n    var expectedSpecialSentences = 0;\n    var expectedExcessSpecialSentences = [];\n\n    if (this.state.sentences.length > 2) {\n      expectedSpecialSentences = this.state.sentences.length * 0.2;\n\n      if (expectedSpecialSentences < 2) {\n        expectedSpecialSentences = 2;\n      }\n    }\n\n    var rankTolerance = 10.0;\n\n    while (specialSentences.length < expectedSpecialSentences) {\n      rankTolerance -= 0.5; //console.log('Heres the rank tolerance' + rankTolerance)\n\n      for (const element in this.state.sentences) {\n        //console.log(this.state.ranks[element])\n        if (rankTolerance < this.state.ranks[element]) {\n          specialSentences.push(this.state.sentences[element]); //console.log('PUSHED ______ ' + this.state.sentences[element])\n        }\n      }\n    }\n\n    for (const element in this.state.sentences) {\n      var isSpecial = false;\n\n      for (const specialElement of specialSentences) {\n        //console.log(specialElement)\n        //console.log(this.state.sentences[element])\n        if (specialElement === this.state.sentences[element]) {\n          isSpecial = true;\n          answerArray.push('<mark>' + specialElement);\n        }\n      }\n\n      if (!isSpecial) {\n        answerArray.push(this.state.sentences[element]);\n      }\n    }\n\n    var exists = false;\n    var noDuplicates = [];\n\n    for (const elem of answerArray) {\n      for (const element of noDuplicates) {\n        if (elem === element) {\n          exists = true;\n        }\n      }\n\n      if (!exists) {\n        noDuplicates.push(elem);\n      }\n\n      exists = false;\n    }\n\n    const listItems = noDuplicates.map((key, i) => {\n      if (key.includes('<mark>')) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"mark\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }, key.replace('<mark>', '')));\n      }\n\n      if (key.includes('<compress>')) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"mark\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }\n        }, key.replace('<compress>', '')));\n      }\n\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, key);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.buttonHandler,\n      ref: \"compress\",\n      type: \"radio\",\n      id: \"compress\",\n      name: \"type\",\n      value: \"compress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"compress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"Compress\"), /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.buttonHandler,\n      ref: \"outline\",\n      type: \"radio\",\n      id: \"outline\",\n      name: \"type\",\n      value: \"outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"Outline\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"input\",\n      id: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, listItems))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js"],"names":["React","ReactDOM","App","QueryForm","Component","constructor","props","SubmitHandler","event","preventDefault","text","findDOMNode","refs","input","value","fetch","then","res","json","data","setState","console","log","state","sentences","tempArray","inc","sentence","push","numOfSentences","rank","ranks","word","entities","words","link","metadata","buttonHandler","e","target","render","specialSentences","excessSentences","answerArray","expectedSpecialSentences","expectedExcessSpecialSentences","length","rankTolerance","element","isSpecial","specialElement","exists","noDuplicates","elem","listItems","map","key","i","includes","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,aAvBmB,GAuBFC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAGT,QAAQ,CAACU,WAAT,CAAqB,KAAKC,IAAL,CAAUC,KAA/B,EAAsCC,KAAjD;AAEAC,MAAAA,KAAK,CAAC,6CAA2CL,IAA5C,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAe,MAAM;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAY,mEAAmEH,IAA/E;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,SAAvB;AACA,YAAIC,SAAS,GAAG,EAAhB;AACA,YAAIC,GAAG,GAAG,CAAV;;AACA,aAAK,MAAMC,QAAX,IAAuBR,IAAI,CAACK,SAA5B,EAAuC;AACrCC,UAAAA,SAAS,CAACG,IAAV,CAAeD,QAAQ,CAACA,QAAxB;AACAD,UAAAA,GAAG;AACJ;;AACD,aAAKN,QAAL,CAAc;AAACS,UAAAA,cAAc,EAAEH;AAAjB,SAAd;AACA,aAAKN,QAAL,CAAc;AAACI,UAAAA,SAAS,EAAEC;AAAZ,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;;AAEA,aAAK,MAAMK,IAAX,IAAmBX,IAAI,CAACK,SAAxB,EAAmC;AACjCC,UAAAA,SAAS,CAACG,IAAV,CAAeE,IAAI,CAACA,IAApB;AACD;;AACD,aAAKV,QAAL,CAAc;AAACW,UAAAA,KAAK,EAAEN;AAAR,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;;AAEA,aAAK,MAAMO,IAAX,IAAmBb,IAAI,CAACc,QAAxB,EAAkC;AAChCR,UAAAA,SAAS,CAACG,IAAV,CAAeI,IAAI,CAACA,IAApB;AACD;;AACD,aAAKZ,QAAL,CAAc;AAACc,UAAAA,KAAK,EAAET;AAAR,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;;AAEA,aAAK,MAAMU,IAAX,IAAmBhB,IAAI,CAACc,QAAxB,EAAkC;AAChCR,UAAAA,SAAS,CAACG,IAAV,CAAeO,IAAI,CAACA,IAApB;AACD;;AACD,aAAKf,QAAL,CAAc;AAACgB,UAAAA,QAAQ,EAAEX;AAAX,SAAd;AACAA,QAAAA,SAAS,GAAG,EAAZ;AACD,OA9Ba,CAFd;AAiCD,KA5DkB;;AAAA,SA8DnBY,aA9DmB,GA8DFC,CAAD,IAAO;AACrB,WAAKlB,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEwB,CAAC,CAACC,MAAF,CAASzB;AAAjB,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAC,CAACC,MAAF,CAASzB,KAArB;AACD,KAjEkB;;AAEjB,SAAKS,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXO,MAAAA,KAAK,EAAE,EAFI;AAGXG,MAAAA,KAAK,EAAE,EAHI;AAIXE,MAAAA,QAAQ,EAAE,EAJC;AAKXP,MAAAA,cAAc,EAAE;AALL,KAAb,CAFiB,CASjB;AACA;AACD,GAZqC,CActC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AA8CAW,EAAAA,MAAM,GAAG;AACP,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,wBAAwB,GAAG,CAA/B;AACA,QAAIC,8BAA8B,GAAG,EAArC;;AACA,QAAI,KAAKtB,KAAL,CAAWC,SAAX,CAAqBsB,MAArB,GAA8B,CAAlC,EAAqC;AACnCF,MAAAA,wBAAwB,GAAG,KAAKrB,KAAL,CAAWC,SAAX,CAAqBsB,MAArB,GAA4B,GAAvD;;AACA,UAAIF,wBAAwB,GAAG,CAA/B,EAAkC;AAChCA,QAAAA,wBAAwB,GAAG,CAA3B;AACD;AACF;;AACD,QAAIG,aAAa,GAAG,IAApB;;AACA,WAAON,gBAAgB,CAACK,MAAjB,GAA0BF,wBAAjC,EAA2D;AACzDG,MAAAA,aAAa,IAAI,GAAjB,CADyD,CAEzD;;AACA,WAAK,MAAMC,OAAX,IAAsB,KAAKzB,KAAL,CAAWC,SAAjC,EAA4C;AAC1C;AACA,YAAIuB,aAAa,GAAG,KAAKxB,KAAL,CAAWQ,KAAX,CAAiBiB,OAAjB,CAApB,EAA+C;AAC7CP,UAAAA,gBAAgB,CAACb,IAAjB,CAAsB,KAAKL,KAAL,CAAWC,SAAX,CAAqBwB,OAArB,CAAtB,EAD6C,CAE7C;AACD;AACF;AACF;;AAED,SAAK,MAAMA,OAAX,IAAsB,KAAKzB,KAAL,CAAWC,SAAjC,EAA4C;AAC1C,UAAIyB,SAAS,GAAG,KAAhB;;AACA,WAAK,MAAMC,cAAX,IAA6BT,gBAA7B,EAA+C;AAC7C;AACA;AACA,YAAIS,cAAc,KAAK,KAAK3B,KAAL,CAAWC,SAAX,CAAqBwB,OAArB,CAAvB,EAAsD;AACpDC,UAAAA,SAAS,GAAG,IAAZ;AACAN,UAAAA,WAAW,CAACf,IAAZ,CAAiB,WAAWsB,cAA5B;AACD;AACF;;AACD,UAAI,CAACD,SAAL,EAAgB;AACdN,QAAAA,WAAW,CAACf,IAAZ,CAAiB,KAAKL,KAAL,CAAWC,SAAX,CAAqBwB,OAArB,CAAjB;AACD;AACF;;AAED,QAAIG,MAAM,GAAG,KAAb;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,MAAMC,IAAX,IAAmBV,WAAnB,EAAgC;AAC9B,WAAK,MAAMK,OAAX,IAAsBI,YAAtB,EAAoC;AAClC,YAAIC,IAAI,KAAKL,OAAb,EAAsB;AACpBG,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;;AACD,UAAI,CAACA,MAAL,EAAa;AACXC,QAAAA,YAAY,CAACxB,IAAb,CAAkByB,IAAlB;AACD;;AACDF,MAAAA,MAAM,GAAG,KAAT;AACD;;AAED,UAAMG,SAAS,GAAGF,YAAY,CAACG,GAAb,CAAiB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC3C,UAAID,GAAG,CAACE,QAAJ,CAAa,QAAb,CAAJ,EAA4B;AAC1B,4BAAQ;AAAG,UAAA,EAAE,EAAED,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,GAAG,CAACG,OAAJ,CAAY,QAAZ,EAAqB,EAArB,CAAP,CAAV,CAAR;AACD;;AACD,UAAIH,GAAG,CAACE,QAAJ,CAAa,YAAb,CAAJ,EAAgC;AAC9B,4BAAQ;AAAG,UAAA,EAAE,EAAED,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,GAAG,CAACG,OAAJ,CAAY,YAAZ,EAAyB,EAAzB,CAAP,CAAV,CAAR;AACD;;AACH,0BAAQ;AAAG,QAAA,EAAE,EAAEF,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWD,GAAX,CAAR;AACD,KARiB,CAAlB;AAUA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,GAAG,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKjD,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAE,KAAK8B,aAArB;AAAoC,MAAA,GAAG,EAAC,UAAxC;AAAmD,MAAA,IAAI,EAAC,OAAxD;AAAgE,MAAA,EAAE,EAAC,UAAnE;AAA8E,MAAA,IAAI,EAAC,MAAnF;AAA0F,MAAA,KAAK,EAAC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,MAAA,OAAO,EAAE,KAAKA,aAArB;AAAoC,MAAA,GAAG,EAAC,SAAxC;AAAkD,MAAA,IAAI,EAAC,OAAvD;AAA+D,MAAA,EAAE,EAAC,SAAlE;AAA4E,MAAA,IAAI,EAAC,MAAjF;AAAwF,MAAA,KAAK,EAAC,SAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAIsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtC,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eAQE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAU,MAAA,GAAG,EAAC,OAAd;AAAsB,MAAA,EAAE,EAAC,OAAzB;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBiB,SAAlB,CAHJ,CARF,CAFJ,CADF;AAmBD;;AAvJqC;;AA4JxC,eAAepD,GAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Compressr</header>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sentences: [],\n      ranks: [],\n      words: [],\n      metadata: [],\n      numOfSentences: 0\n  };\n    //this.output = ''\n    //this.render()\n  }\n\n  // callAPI() {\n  //   fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n  //   .then(res => res.text())\n  //   .then(data => this.setState({sentences: data}))\n  // }\n  \n  // componentWillMount() {\n  //   this.callAPI()\n  // }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var text = ReactDOM.findDOMNode(this.refs.input).value;\n    \n    fetch('http://localhost:8080/api/analysis?text='+text)\n    .then(res => res.json())\n    .then(data => this.setState( () => {\n      console.log('&&&&&&&&&&&&&&&&&&&&&&&&&FETCHED DATA HERE IS THE  FECTED DATA' + data)\n      console.log(this.state.sentences)\n      var tempArray = []\n      var inc = 0\n      for (const sentence of data.sentences) {\n        tempArray.push(sentence.sentence)\n        inc++\n      }\n      this.setState({numOfSentences: inc})\n      this.setState({sentences: tempArray})\n      tempArray = []\n\n      for (const rank of data.sentences) {\n        tempArray.push(rank.rank)\n      }\n      this.setState({ranks: tempArray})\n      tempArray = []\n\n      for (const word of data.entities) {\n        tempArray.push(word.word)\n      }\n      this.setState({words: tempArray})\n      tempArray = []\n\n      for (const link of data.entities) {\n        tempArray.push(link.link)\n      }\n      this.setState({metadata: tempArray})\n      tempArray = []\n    }))\n  }\n\n  buttonHandler = (e) => {\n    this.setState({value: e.target.value})\n    console.log(e.target.value)\n  }\n\n  render() {\n    var specialSentences = []\n    var excessSentences = []\n    var answerArray = []\n    var expectedSpecialSentences = 0\n    var expectedExcessSpecialSentences = []\n    if (this.state.sentences.length > 2) {\n      expectedSpecialSentences = this.state.sentences.length*0.2\n      if (expectedSpecialSentences < 2) {\n        expectedSpecialSentences = 2\n      }\n    }\n    var rankTolerance = 10.0\n    while (specialSentences.length < expectedSpecialSentences) {\n      rankTolerance -= 0.5\n      //console.log('Heres the rank tolerance' + rankTolerance)\n      for (const element in this.state.sentences) {\n        //console.log(this.state.ranks[element])\n        if (rankTolerance < this.state.ranks[element]) {\n          specialSentences.push(this.state.sentences[element])\n          //console.log('PUSHED ______ ' + this.state.sentences[element])\n        }\n      }\n    }\n\n    for (const element in this.state.sentences) {\n      var isSpecial = false\n      for (const specialElement of specialSentences) {\n        //console.log(specialElement)\n        //console.log(this.state.sentences[element])\n        if (specialElement === this.state.sentences[element]) {\n          isSpecial = true\n          answerArray.push('<mark>' + specialElement)\n        }\n      }\n      if (!isSpecial) {\n        answerArray.push(this.state.sentences[element])\n      }\n    }\n\n    var exists = false\n    var noDuplicates = []\n    for (const elem of answerArray) {\n      for (const element of noDuplicates) {\n        if (elem === element) {\n          exists = true\n        }\n      }\n      if (!exists) {\n        noDuplicates.push(elem)\n      }\n      exists = false\n    }\n\n    const listItems = noDuplicates.map((key, i) => {\n        if (key.includes('<mark>')) {\n          return (<p id={i}><mark>{key.replace('<mark>','')}</mark></p>)\n        }\n        if (key.includes('<compress>')) {\n          return (<p id={i}><mark>{key.replace('<compress>','')}</mark></p>)\n        }\n      return (<p id={i}>{key}</p>)\n    })\n\n    return (\n      <div className=\"App\">\n          <link rel=\"shortcut icon\" href=\"/favicon.ico\"></link>\n          <div id=\"inputForm\">\n            <form onSubmit={this.SubmitHandler}>\n              <input onClick={this.buttonHandler} ref=\"compress\" type=\"radio\" id=\"compress\" name=\"type\" value=\"compress\"></input>\n              <label for=\"compress\">Compress</label>\n              <input onClick={this.buttonHandler} ref=\"outline\" type=\"radio\" id=\"outline\" name=\"type\" value=\"outline\"></input>\n              <label for=\"outline\">Outline</label><br></br>\n              <input type='submit'/>\n            </form>\n            <div id=\"wrapper\">\n                <p>Enter Text Below:</p>\n                <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n                <div id=\"answer\">{listItems}</div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}