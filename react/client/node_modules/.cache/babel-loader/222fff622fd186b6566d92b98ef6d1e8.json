{"ast":null,"code":"var _jsxFileName = \"/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Compressr\"), /*#__PURE__*/React.createElement(QueryForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SubmitHandler = event => {\n      event.preventDefault();\n      var text = ReactDOM.findDOMNode(this.refs.input).value;\n      fetch('http://localhost:8080/api/analysis?text=' + text).then(res => res.json()).then(sentences => this.setState({\n        sentences: sentences\n      }, () => {\n        console.log('fetched these sentences', sentences); // for (var sentence of this.state.sentences) {\n        //   this.output += sentence\n        // }\n        // console.log(this.output)\n      }));\n    };\n\n    this.buttonHandler = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      sentences: \"\",\n      value: \"\"\n    }; //this.output = ''\n    //this.render()\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:8080/api/analysis?text=Hello World!\").then(res => res.text()).then(sentences => this.setState({\n      sentences: sentences\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    if (this.value === 'compress') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"inputForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.SubmitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.buttonHandler,\n        ref: \"compress\",\n        type: \"radio\",\n        id: \"compress\",\n        name: \"type\",\n        value: \"compress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"compress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"Compress\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.buttonHandler,\n        ref: \"outline\",\n        type: \"radio\",\n        id: \"outline\",\n        name: \"type\",\n        value: \"outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Outline\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"input\",\n        id: \"input\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"output\",\n        id: \"output\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, \"Compress\"))));\n    }\n\n    if (this.value === 'outline') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"inputForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.SubmitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: \"compress\",\n        type: \"radio\",\n        id: \"compress\",\n        name: \"type\",\n        value: \"compress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"compress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Compress\"), /*#__PURE__*/React.createElement(\"input\", {\n        ref: \"outline\",\n        type: \"radio\",\n        id: \"outline\",\n        name: \"type\",\n        value: \"outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Outline\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"input\",\n        id: \"input\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: \"output\",\n        id: \"output\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, \"Outline\")))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"compress\",\n      type: \"radio\",\n      id: \"compress\",\n      name: \"type\",\n      value: \"compress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"compress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Compress\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"outline\",\n      type: \"radio\",\n      id: \"outline\",\n      name: \"type\",\n      value: \"outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Outline\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Enter Text Below:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"input\",\n      id: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: \"output\",\n      id: \"output\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rohithnadimpally/Downloads/Compressr/react/client/src/App.js"],"names":["React","ReactDOM","App","QueryForm","Component","constructor","props","SubmitHandler","event","preventDefault","text","findDOMNode","refs","input","value","fetch","then","res","json","sentences","setState","console","log","buttonHandler","e","target","state","callAPI","componentWillMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header id='header'>Compressr</header>\n      <QueryForm/>\n    </div>\n  );\n}\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sentences: \"\",\n      value: \"\"\n  };\n    //this.output = ''\n    //this.render()\n  }\n\n  callAPI() {\n    fetch (\"http://localhost:8080/api/analysis?text=Hello World!\")\n    .then(res => res.text())\n    .then(sentences => this.setState({sentences: sentences}))\n  }\n  \n  componentWillMount() {\n    this.callAPI()\n  }\n\n  SubmitHandler = (event) => {\n    event.preventDefault();\n    var text = ReactDOM.findDOMNode(this.refs.input).value;\n    \n    fetch('http://localhost:8080/api/analysis?text='+text)\n    .then(res => res.json())\n    .then(sentences => this.setState({sentences: sentences}, () => {\n      console.log('fetched these sentences', sentences)\n      // for (var sentence of this.state.sentences) {\n      //   this.output += sentence\n      // }\n      // console.log(this.output)\n    }))\n  }\n\n  buttonHandler = (e) => {\n    this.setState({value: e.target.value})\n  }\n\n  render() {\n    if (this.value === 'compress') {\n      return (\n        <div className=\"App\">\n            <div id=\"inputForm\">\n              <form onSubmit={this.SubmitHandler}>\n                <input onChange={this.buttonHandler} ref=\"compress\" type=\"radio\" id=\"compress\" name=\"type\" value=\"compress\"></input>\n                <label for=\"compress\">Compress</label>\n                <input onChange={this.buttonHandler} ref=\"outline\" type=\"radio\" id=\"outline\" name=\"type\" value=\"outline\"></input>\n                <label for=\"outline\">Outline</label><br></br>\n                <input type='submit'/>\n              </form>\n              <div id=\"wrapper\">\n                  <p>Enter Text Below:</p>\n                  <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n                  <textarea ref=\"output\" id=\"output\" type=\"text\">\n                    Compress\n                  </textarea>\n                </div>\n            </div>\n        </div>\n      )\n    } \n    if (this.value === 'outline') {\n      return (\n        <div className=\"App\">\n            <div id=\"inputForm\">\n              <form onSubmit={this.SubmitHandler}>\n                <input ref=\"compress\" type=\"radio\" id=\"compress\" name=\"type\" value=\"compress\"></input>\n                <label for=\"compress\">Compress</label>\n                <input ref=\"outline\" type=\"radio\" id=\"outline\" name=\"type\" value=\"outline\"></input>\n                <label for=\"outline\">Outline</label><br></br>\n                <div id=\"wrapper\">\n                  <input type='submit'/>\n                  <p>Enter Text Below:</p>\n                  <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n                  <textarea ref=\"output\" id=\"output\" type=\"text\">\n                    Outline\n                  </textarea>\n                </div>\n              </form>\n            </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"App\">\n          <div id=\"inputForm\">\n            <form onSubmit={this.SubmitHandler}>\n              <input ref=\"compress\" type=\"radio\" id=\"compress\" name=\"type\" value=\"compress\"></input>\n              <label for=\"compress\">Compress</label>\n              <input ref=\"outline\" type=\"radio\" id=\"outline\" name=\"type\" value=\"outline\"></input>\n              <label for=\"outline\">Outline</label><br></br>\n              <div id=\"wrapper\">\n                <input type='submit'/>\n                <p>Enter Text Below:</p>\n                <textarea ref=\"input\" id=\"input\" type=\"text\"/>\n                <textarea ref=\"output\" id=\"output\" type=\"text\">\n                </textarea>\n              </div>\n            </form>\n          </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}